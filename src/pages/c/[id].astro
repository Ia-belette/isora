---
import Layout from "../../layouts/Layout.astro";
import { XataClient } from "../../xata";
import ProviderList from "../../components/Providers.tsx";
import { Image } from "astro:assets";
import { formatRuntime, getOfficialTrailer } from "../../lib/utils";
import TrailerDialog from "../../components/TrailerDialog.astro";
import BaseHead from "../../components/BaseHead.astro";
const { env } = Astro.locals.runtime;

export const prerender = false;

const { id } = Astro.params;

const xata = new XataClient({
  apiKey: env.XATA_API_KEY,
  branch: env.XATA_BRANCH,
});

const movie = await xata.db.contents.read(id as string);

if (!movie) {
  return Astro.rewrite("/404");
}

const response = await fetch(
  `https://api.themoviedb.org/3/movie/${movie.tmdb_id}?append_to_response=videos,watch/providers`,
  {
    method: "GET",
    headers: {
      accept: "application/json",
      Authorization: `Bearer ${env.TMDB_API_KEY}`,
    },
  }
);

const tmdbData = await response.json();
const trailer = getOfficialTrailer(tmdbData.videos);
---

<Layout>
  <head>
    <BaseHead title={`${movie.title}`} description={`${movie.title}`} />
  </head>
  <main class="container space-y-5 py-10" x-data="providerData()">
    <div class="space-y-10">
      <div class="w-50 mx-auto">
        <Image
          src={movie.poster_url || ""}
          class="aspect-[2/3] h-auto mx-auto rounded-xl shadow-lg"
          alt={"Movie poster"}
          loading="eager"
          inferSize
        />
      </div>
      <div class="space-y-3 flex items-center justify-center flex-col">
        <h1 class="text-2xl font-semibold text-center text-neutral-900">
          {movie.title}
        </h1>
        <div class="flex flex-wrap justify-center items-center gap-1.5">
          <p class="text-sm text-neutral-600">
            {formatRuntime(tmdbData.runtime)}
          </p>
          <ul class="flex gap-2">
            {
              tmdbData.genres.map(
                (
                  genre: {
                    id: string;
                    name: string;
                  },
                  index: number
                ) => (
                  <li class="inline-block text-sm text-neutral-600">
                    <a
                      href={`/genre/${genre.name}`}
                      class="hover:underline underline-offset-4"
                    >
                      {genre.name}
                    </a>
                  </li>
                )
              )
            }
          </ul>
        </div>
        <p
          class="mx-auto max-w-md text-balance px-4 text-center text-neutral-600"
        >
          {movie?.overview!}
        </p>
        <TrailerDialog trailerId={trailer} />
      </div>
    </div>

    <ProviderList
      providers={tmdbData["watch/providers"].results}
      client:only="preact"
    />
  </main>
</Layout>
